//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsAuthenticator.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WindowsAuthenticator.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In Advanced mode you are able to edit the script that is used to send the code keys to your application..
        /// </summary>
        internal static string AUTOLOGIN_SCRIPT_TOOLTIP {
            get {
                return ResourceManager.GetString("AUTOLOGIN_SCRIPT_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use a mixture of key command and plain text to build up your string.
        ///
        ///The default is {CODE}{ENTER 4000} which sends the Authenticator code and an ENTER key with a 4 second delay.
        ///
        ///Commands can be {COMMAND delay repeat} where delay is milliseconds to wait after each command, and repeat is the number of times to repeat the command. Delay and repeat are optional.
        ///
        ///Commands are:
        ///{CODE} to insert the current code
        ///{ENTER} to send the ENTER key
        ///{TAB} to send the TAB key
        ///{COPY} to copy the code in [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AUTOLOGIN_TBADVANCED_TOOLTIP {
            get {
                return ResourceManager.GetString("AUTOLOGIN_TBADVANCED_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy the current code to your clipboard.
        /// </summary>
        internal static string COPYCLIPBOARD_TOOLTIP {
            get {
                return ResourceManager.GetString("COPYCLIPBOARD_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy To Clipboard.
        /// </summary>
        internal static string COPYCLIPBOARD_TOOLTIP_TITLE {
            get {
                return ResourceManager.GetString("COPYCLIPBOARD_TOOLTIP_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh and displayed the current code.
        /// </summary>
        internal static string REFRESHCODE_TOOLTIP {
            get {
                return ResourceManager.GetString("REFRESHCODE_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh Code.
        /// </summary>
        internal static string REFRESHCODE_TOOLTIP_TITLE {
            get {
                return ResourceManager.GetString("REFRESHCODE_TOOLTIP_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Synchronize the time in your authenticator with Battle.net. Use this if your code is not working..
        /// </summary>
        internal static string SYNCBUTTON_TOOLTIP {
            get {
                return ResourceManager.GetString("SYNCBUTTON_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Synchronize Time.
        /// </summary>
        internal static string SYNCBUTTON_TOOLTIP_TITLE {
            get {
                return ResourceManager.GetString("SYNCBUTTON_TOOLTIP_TITLE", resourceCulture);
            }
        }
    }
}
